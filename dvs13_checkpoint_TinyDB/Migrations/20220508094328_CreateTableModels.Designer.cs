// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dvs13_TinyDB.DataAccess;

namespace dvs13_TinyDB.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220508094328_CreateTableModels")]
    partial class CreateTableModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CourseLecture", b =>
                {
                    b.Property<int>("CourseListID")
                        .HasColumnType("int");

                    b.Property<int>("LectureListID")
                        .HasColumnType("int");

                    b.HasKey("CourseListID", "LectureListID");

                    b.HasIndex("LectureListID");

                    b.ToTable("CourseLecture");
                });

            modelBuilder.Entity("LectureStudent", b =>
                {
                    b.Property<int>("LectureListID")
                        .HasColumnType("int");

                    b.Property<int>("StudentListID")
                        .HasColumnType("int");

                    b.HasKey("LectureListID", "StudentListID");

                    b.HasIndex("StudentListID");

                    b.ToTable("LectureStudent");
                });

            modelBuilder.Entity("dvs13_TinyDB.DataModels.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("dvs13_TinyDB.DataModels.Lecture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("dvs13_TinyDB.DataModels.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CourseLecture", b =>
                {
                    b.HasOne("dvs13_TinyDB.DataModels.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dvs13_TinyDB.DataModels.Lecture", null)
                        .WithMany()
                        .HasForeignKey("LectureListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LectureStudent", b =>
                {
                    b.HasOne("dvs13_TinyDB.DataModels.Lecture", null)
                        .WithMany()
                        .HasForeignKey("LectureListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dvs13_TinyDB.DataModels.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dvs13_TinyDB.DataModels.Student", b =>
                {
                    b.HasOne("dvs13_TinyDB.DataModels.Course", "Course")
                        .WithMany("StudentList")
                        .HasForeignKey("CourseID");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("dvs13_TinyDB.DataModels.Course", b =>
                {
                    b.Navigation("StudentList");
                });
#pragma warning restore 612, 618
        }
    }
}
